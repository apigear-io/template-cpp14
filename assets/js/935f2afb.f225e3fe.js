"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/template-cpp14/intro","docId":"intro"},{"type":"link","label":"Quick-Start","href":"/template-cpp14/quickstart/","docId":"quickstart/index"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API","href":"/template-cpp14/features/api","docId":"features/api"},{"type":"link","label":"Stubs","href":"/template-cpp14/features/stubs","docId":"features/stubs"},{"type":"link","label":"MQTT","href":"/template-cpp14/features/mqtt","docId":"features/mqtt"},{"type":"link","label":"Olink","href":"/template-cpp14/features/olink","docId":"features/olink"},{"type":"link","label":"Monitor","href":"/template-cpp14/features/monitor","docId":"features/monitor"},{"type":"link","label":"Conan package manager","href":"/template-cpp14/features/conan","docId":"features/conan"}],"href":"/template-cpp14/features/"}]},"docs":{"features/api":{"id":"features/api","title":"API","description":"The feature api is the bare minimum for the code generation. What you receive is:","sidebar":"docsSidebar"},"features/conan":{"id":"features/conan","title":"Conan package manager","description":"With this feature you we generate a conan support for your project. It helps with packaging and to managing dependencies for different platforms, OSs, compilers, architecture, cross-builds. Read more about conan and its all benefits here.","sidebar":"docsSidebar"},"features/features":{"id":"features/features","title":"Features","description":"This guide explains how to use the generated code, what are the available features and  their benefits.","sidebar":"docsSidebar"},"features/monitor":{"id":"features/monitor","title":"Monitor","description":"Use our monitor feature to examine the interface calls, state and signals. With this feature you obtain a monitor client and a monitored version of your interfaces. The monitoring server is embedded into the ApiGear Studio and CLI version.","sidebar":"docsSidebar"},"features/mqtt":{"id":"features/mqtt","title":"MQTT","description":"This is an experimental feature. It contains smallest working set of functionalities to adapt the generated interface for using over the network with MQTT protocol.","sidebar":"docsSidebar"},"features/olink":{"id":"features/olink","title":"Olink","description":"This feature provides a client and a server adapter for your interfaces for the ObjectLink protocol. It allows you to connect different applications in the same or different technologies (check all of our templates).","sidebar":"docsSidebar"},"features/stubs":{"id":"features/stubs","title":"Stubs","description":"The feature stubs adds:","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"This is the documentation for the cpp14 template.","sidebar":"docsSidebar"},"quickstart/index":{"id":"quickstart/index","title":"Quick-Start","description":"The Quick-Start guide explains how to, in few steps, get from an API to a functional c++ example.","sidebar":"docsSidebar"}}}')}}]);