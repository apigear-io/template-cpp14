{% comment %} // Copyright (c) ApiGear UG 2020 {% endcomment -%}
{{ module | licGPLcpp -}}
#include <memory>
#include "catch2/catch.hpp"
#include "{{module.name|identifier}}/implementation/{{interface.name|lower }}.h"

{% assign class = interface.name %}

using namespace {{ system.name | capital }}::{{ module.name | capital }};
TEST_CASE("Testing {{class}}", "[{{class}}]"){
    std::unique_ptr<I{{class}}> test{{class}} = std::make_unique<{{class}}>();
    // setup your test

{% for operation in interface.operations %}
    SECTION("Test operation {{operation.name}}") {
        // Do implement test here
        test{{class}}->{{operation.name}}(
            {% for param in operation.params -%}
                {{param|cpp14Default}}
                {% unless forloop.last %},
                {% endunless -%}
            {% endfor -%}
            );
    }
{% endfor %}
{% comment %} line seperator {% endcomment %}
{% for property in interface.properties %}
    SECTION("Test property {{property.name}}") {
        // Do implement test here
        test{{class}}->set{{property.name|capitalize}}({{property|cpp14Default}});
        REQUIRE( test{{class}}->{{property.name}}() == {% if property.type == 'float'%} Approx({% endif %} {{property|cpp14Default}}{% if property.type == 'float'%} ){% endif %} );
    }
{% endfor %}
}
