{% comment %} // Copyright (c) ApiGear UG 2020 {% endcomment -%}
#pragma once

#include "generated/api/{{module.name|identifier}}.h"

namespace ApiGear { namespace PocoImpl { class Tracer; } }

namespace {{ system.name | capital }} {
namespace {{ module.name | capital }} {

{% for interface in module.interfaces %}
{% assign class = interface.name | append: "Tracer" %}

class {{class}}
{
public:
  {{class}}(ApiGear::PocoImpl::Tracer* tracer);
  virtual ~{{class}}() = default;
  
  void capture_state(I{{interface.name}}* obj);
  {% for operation in interface.operations %}
  void trace_{{operation.name}}({{operation | cpp14Params}});
  {% endfor %}
private:
  ApiGear::PocoImpl::Tracer* m_tracer;
};
{% endfor %}
} // namespace {{ module.name | capital }}
} // namespace {{ system.name | capital }}
