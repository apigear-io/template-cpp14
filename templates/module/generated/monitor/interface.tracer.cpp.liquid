{% comment %} // Copyright (c) ApiGear UG 2020 {% endcomment -%}
#include "apigear/tracer/tracer.h"
#include "{{module.name|identifier}}/generated/core/{{module.name|identifier}}.json.adapter.h"
#include "{{module.name|identifier}}/generated/monitor/{{interface.name|lower}}.tracer.h"

using namespace {{ system.name | capital }}::{{ module.name | capital }};

{% assign class = interface.name | append: "Tracer" %}

{{class}}::{{class}}(ApiGear::PocoImpl::Tracer* tracer)
    : m_tracer(tracer)
{
}

void {{class}}::capture_state(I{{interface.name}}* obj)
{
    nlohmann::json fields_;
    {% for property in interface.properties %}
    fields_["{{property.name}}"] = obj->{{property.name}}();
    {% else %}
    (void) obj;
    {% endfor %}
    m_tracer->state("{{module.name}}.{{interface.name}}#_state", fields_);
}

{% for operation in interface.operations %}

void {{class}}::trace_{{operation.name}}({{operation|cpp14Params}})
{
    nlohmann::json fields_;
    {% for param in operation.params %}
    fields_["{{param.name}}"] = {{param.name}};
    {% endfor %}
    m_tracer->call("{{module.name}}.{{interface.name}}#{{operation.name}}", fields_);
}
{% endfor %}
